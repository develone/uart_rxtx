Thu Apr 19 2018
Initial code was download from 
https://www.edaplayground.com/x/Pgf
http://www.nandland.com
iverilog -o testuart UART_TB.v UART_RX.v
vvp testuart
VCD info: dumpfile dump.vcd opened for output.
Test Passed - Correct Byte Received
This code was created 

  // Testbench uses a 25 MHz clock
  // Want to interface to 115200 baud UART
  // 25000000 / 115200 = 217 Clocks Per Bit.
  parameter c_CLOCK_PERIOD_NS = 40;
  Testing at 100 MHz appears okay
    Using MyHDL to create uart_rx.v with uart_rx.py
    & uart_tx.v with uart_tx.py
    pi@pi3-2:~/testing_uart/myhdl $ vvp testuart
    VCD info: dumpfile dump.vcd opened for output.
    Test Passed - Correct Byte Received

python uart_tx.py will write over tb_uart_tx.v
python uart_rx.py  
  uart_rx.v needs
      parameter IDLE         = 3'b000;
      parameter TX_START_BIT = 3'b001;
      parameter TX_DATA_BITS = 3'b010;
      parameter TX_STOP_BIT  = 3'b011;
      parameter CLEANUP      = 3'b100;
    reg r_RX_DV = 0;
    reg [2:0] r_SM_Main = 0;
    reg [7:0] r_Clock_Count = 0;
    reg [2:0] r_Bit_Index = 0;
    reg [7:0] r_RX_Byte = 0;

    uart_tx.v
      parameter IDLE         = 3'b000;
      parameter TX_START_BIT = 3'b001;
      parameter TX_DATA_BITS = 3'b010;
      parameter TX_STOP_BIT  = 3'b011;
      parameter CLEANUP      = 3'b100;
    
    reg [7:0] r_Clock_Count         = 0;
    reg [2:0] r_Bit_Index           = 0;
    reg [7:0] r_TX_data             = 0;
    reg r_TX_Active                         = 0;
    reg [2:0] r_SM_Main             = 0;
    reg r_TX_Done                           = 0;
