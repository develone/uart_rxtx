diff --git a/wbuart32/basic/clktest.v b/wbuart32/basic/clktest.v
index acd52c3..72eabcd 100644
--- a/wbuart32/basic/clktest.v
+++ b/wbuart32/basic/clktest.v
@@ -51,8 +51,32 @@ module	clktest(i_clk, o_ledg, o_ledr);
 	reg		pps;
 	reg [31:0]	ctr;
 	initial ctr = 0;
-	always @(posedge i_clk)
-		{pps, ctr} <= ctr + 32'd43;	// Valid if CLKRATE = 100MHz
+	
+	wire	clk_66mhz, pll_locked;
+	SB_PLL40_CORE #(
+		.FEEDBACK_PATH("SIMPLE"),
+		.DELAY_ADJUSTMENT_MODE_FEEDBACK("FIXED"),
+		.DELAY_ADJUSTMENT_MODE_RELATIVE("FIXED"),
+		.PLLOUT_SELECT("GENCLK"),
+		.FDA_FEEDBACK(4'b1111),
+		.FDA_RELATIVE(4'b1111),
+		.DIVR(4'd8),		// Divide by (DIVR+1)
+		.DIVQ(3'd3),		// Divide by 2^(DIVQ)
+		.DIVF(7'd47),		// Multiply by (DIVF+1)
+		.FILTER_RANGE(3'b001)
+	) plli (
+		.REFERENCECLK    (i_clk        ),
+		.PLLOUTCORE     (clk_66mhz    ),
+		.LOCK           (pll_locked  ),
+		.BYPASS         (1'b0         ),
+		.RESETB         (1'b1         )
+	);
+
+	assign	s_clk = clk_66mhz;
+	
+	always @(posedge s_clk)
+		{pps, ctr} <= ctr + 32'd65;	// Valid if CLKRATE = 66MHz
+		//{pps, ctr} <= ctr + 32'd43;	// Valid if CLKRATE = 100MHz
 		// {pps, ctr} <= ctr + 32'd89;  // Good if CLKRATE =  48MHz
 		// {pps, ctr} <= ctr + 32'd172; // Good if CLKRATE =  25MHz
 
@@ -66,7 +90,7 @@ module	clktest(i_clk, o_ledg, o_ledr);
 	// go back to zero--so it will never actually hit 60.
 	reg	[5:0]	secs;
 	initial	mins = 6'h0;
-	always @(posedge i_clk)
+	always @(posedge s_clk)
 		if (secs >= 6'd60)
 			secs <= 6'h0;
 		else if ((pps)&&(secs == 6'd59))
